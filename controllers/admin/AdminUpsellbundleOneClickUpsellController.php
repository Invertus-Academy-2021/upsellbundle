<?php

class AdminUpsellbundleOneClickUpsellController extends ModuleAdminController
{
    public function __construct()
    {
        $this->bootstrap = true;
        /**
         * Connecting Controller with object and database
         */
        $this->table = 'product';
        $this->className = 'Product';
        $this->lang = true;
        /**
         * Adding row actions without which we cant edit or delete
         * Custom row actions can be added
         */
//        $this->addRowAction('edit');
//        $this->addRowAction('delete');

//        $this->_defaultOrderBy = 'id_training_article';
        parent::__construct();
    }

    public function init()
    {
        parent::init();
        $this->initList();
        //$this->initForm();
    }

    public function postProcess()
    {
      //  dump(Tools::getAllValues()); die;
        return parent::postProcess(); // TODO: Change the autogenerated stub
    }

    public function saveActive()
    {

    }

    private function initList()
    {
        /**
         * Those are needed if you want to add more data to select then table of object of this controller
         */
        $this->_select = ' IF(po.`id_chained` IS NOT NULL, 1, 0) AS "active"';
        $this->_join = 'LEFT JOIN `'._DB_PREFIX_.'product_oneclickupsell` `po` 
        ON po.`id_chained` = a.`id_product`
        AND  po.`id_product` = '.(int)Tools::getValue('product_id');
        $this->_where = 'AND a.`id_product` != '.(int)Tools::getValue('product_id');
        //$this->_where = 'AND po.`id_product` = '.(int)Tools::getValue('product_id');
        $this->list_no_link = true;
        $this->fields_list =  array(
            'id_product' => array(
                'title' => $this->module->l('Id'),
                'width' => 100,
                'class' => 'my-custom-class'
            ),
            'name' => array(
                'title' => $this->module->l('Name'),
                'width' => 80,
            ),
            'active' => array(
                'title' => $this->l('Is active?'),
                //'type' => "bool",
                'callback' => /*$this->module->l('Id')*/"chainUpsell"
            ),
        );

    }

    public function setMedia($isNewTheme = false)
    {
        parent::setMedia($isNewTheme);
        $this->addJs(_MODULE_DIR_ . $this->module->name . '/views/js/product-selection.js');
        $this->addCSS([_MODULE_DIR_ . $this->module->name . '/views/css/style.css']);

        Media::addJsDef([
            'ajax_url' => $this->context->link->getAdminLink('AdminUpsellbundleAjax', true)
        ]);
    }


    public function chainUpsell($active, $params){
        $this->context->smarty->assign([
            'id_product' => (int)Tools::getValue('product_id'),
            /*'id_chained' => $params['Id']*/
            //'url' => $this->context->link->getAdminLink('AdminUpsellbundleOneClickUpsell'),
            'id_chained' => $params['id_product'],
            'activated' => $active
        ]);

        //Tools::redirectAdmin($this->context->link->getAdminLink('AdminUpsellbundleOneClickUpsell'));
        return $this->context->smarty->fetch('module:'.$this->module->name.'/views/templates/admin/displaySwitchButton.tpl');
        //return "Hello world";
    }

    /**
     * More information how form is being displayed can be found in PS/admin/themes/default/template/helpers/form/form.tpl
     */
    private function initForm()
    {
        /**
         * this way you can show certain values to customers as selected
         */
        //$this->fields_value['type_1'] = true;
        //$this->fields_value['type_3'] = true;

        $this->fields_form =  array(
            'legend' => array(
                'title' => $this->module->l('name'),
                'icon' => 'icon-info-sign',
            ),
            'input' => array(
                /*array(
                    'type' => 'text',
                    'label' => $this->module->l('Name'),
                    'name' => 'name',
                    'lang' => true,
                    'required' => true,
                    'col' => '4',
                    'hint' => $this->trans('Your internal name for this attribute.', array(), 'Admin.Catalog.Help') . '&nbsp;' . $this->trans('Invalid characters:', array(), 'Admin.Notifications.Info') . ' <>;=#{}',
                ),
                array(
                    'type' => 'textarea',
                    'label' => $this->module->l('Description'),
                    'name' => 'description',
                    'lang' => true,
                    'required' => true,
                    'col' => '4',
                    'hint' => $this->trans('Your internal name for this attribute.', array(), 'Admin.Catalog.Help') . '&nbsp;' . $this->trans('Invalid characters:', array(), 'Admin.Notifications.Info') . ' <>;=#{}',
                ),*/
                array(
                    'type' => 'checkbox',
                    'label' => $this->module->l('Type'),
                    'name' => 'type',
                    'values' => array(
                        'query' => Group::getGroups($this->context->language->id),
                        'id' => 'id_group',
                        'name' => 'name',
                    ),
                    'col' => '4',
                    'hint' => $this->trans('Your internal name for this attribute.', array(), 'Admin.Catalog.Help') . '&nbsp;' . $this->trans('Invalid characters:', array(), 'Admin.Notifications.Info') . ' <>;=#{}',
                ),
            ),
            'submit' => array(
                'title' => $this->trans('Save', array(), 'Admin.Actions'),
            )
        );
    }
}